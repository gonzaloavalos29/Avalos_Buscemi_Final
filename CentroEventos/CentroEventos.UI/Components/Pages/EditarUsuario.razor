@page "/editar-usuario/{IdUsuario:guid}"
@rendermode InteractiveServer
@inject IRepositorioUsuario Repo
@inject UsuarioModificarUseCase ModificarUsuario
@inject ValidadorUsuario Validador
@inject IServicioAutorizacion Autorizacion
@inject ServicioSesionUsuario Sesion

<h3>Editar Usuario</h3>

@if (mensaje != null)
{
    <p style="color:red">@mensaje</p>
}

@if (usuario != null)
{
    <div>
        <label>Nombre:</label>
        <input @bind="usuario.nombre" />
        <br />

        <label>Apellido:</label>
        <input @bind="usuario.apellido" />
        <br />

        <label>Email:</label>
        <input @bind="usuario.email" />
        <br />
        <button class="btn btn-primary" @onclick="Modificar">Guardar Cambios</button>
    </div>
}

@if (exito)
{
    <p style="color:green">Usuario modificado correctamente.</p>
}

@code {
    [Parameter]
    public Guid IdUsuario { get; set; }

    private Usuario? usuario;
    private string? mensaje;
    private bool exito = false;

    protected override void OnInitialized()
    {
        BuscarUsuario(IdUsuario);
    }

    private void BuscarUsuario(Guid id)
    {
        mensaje = null;
        exito = false;
        usuario = Repo.ObtenerPorId(id);

        if (usuario == null)
            mensaje = "Usuario no encontrado.";
    }

    private void Modificar()
    {
        mensaje = null;
        exito = false;

        try
        {
            ModificarUsuario.Ejecutar(usuario!, Sesion.UsuarioActual!.id, Validador);
            exito = true;
        }
        catch (Exception ex)
        {
            mensaje = ex.Message;
        }
    }
}